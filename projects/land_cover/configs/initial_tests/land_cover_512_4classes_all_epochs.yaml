# --------------------------------------------------------------------------
# Configuration of the parameters for training and preprocessing
# very-high resolution dataset using deep learning techniques.
# --------------------------------------------------------------------------

experiment_name: landcover-trees
experiment_type: landcover

data_dir: '/projects/kwessel4/nga-senegal-4class/dataset'

seed: 42
gpu_devices: 0,1,2,3
mixed_precision: True
xla: False

input_bands:
  - CoastalBlue
  - Blue
  - Green
  - Yellow
  - Red
  - RedEdge
  - NIR1
  - NIR2

output_bands:
  - CoastalBlue
  - Blue
  - Green
  - Yellow
  - Red
  - RedEdge
  - NIR1
  - NIR2
  #- CS1
  #- CS2
  #- DVI
  #- DWI
  #- NDVI
  
substract_labels: True
normalize: 1.0

modify_labels:
  - "x == 0": 8
  - "x == 1": 9
  - "x == 4": 7
  - "x == 3": 0
  - "x == 2": 0
  - "x == 8": 1
  - "x == 9": 2
  - "x == 7": 3

expand_dims: True
tile_size: 512
include_classes: True
augment: True

# standardization functions: local, global, mixed
# global standardization
# mixed standardization
standardization: 'local'
batch_size: 32
n_classes: 4
test_size: 0.20
learning_rate: 0.0001
max_epochs: 6000
patience: 10

model: "tensorflow_caney.networks.unet.unet_batchnorm(nclass=4, input_size=(512, 512, 8),maps=[64, 128, 256, 512, 1024])"
#model: "sm.Unet('resnet34', input_shape=(256, 256, 3), encoder_weights=None, classes=4, activation='softmax')"

loss: 'tf.keras.losses.CategoricalCrossentropy()'
#loss: sm.losses.CategoricalFocalLoss
#loss: sm.losses.categorical_focal_dice_loss
#loss: sm.losses.categorical_focal_jaccard_loss

optimizer: tf.keras.optimizers.Adam

metrics:
  - 'tf.keras.metrics.CategoricalAccuracy()'
  - 'tf.keras.metrics.Recall()'
  - 'tf.keras.metrics.Precision()'
  - 'sm.metrics.iou_score'

callbacks:
  - "tf.keras.callbacks.ModelCheckpoint(save_best_only=True, mode='max', monitor='val_categorical_accuracy', filepath='${data_dir}/model/{epoch:02d}-{val_loss:.2f}.hdf5')"
  - "tf.keras.callbacks.ReduceLROnPlateau(monitor='val_loss', factor=0.1, patience=4)"
  - "tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=10, restore_best_weights=False)"
  - "tf.keras.callbacks.TerminateOnNaN()"

# window_size: 8192
window_size: 10000
pred_batch_size: 32
inference_overlap: 2
inference_treshold: 0.50

# Prediction location
#model_filename: /projects/kwessel4/nga-senegal-4class/dataset/model/48-0.16.hdf5
#inference_regex: '/home/mle35/nga-senegal/scripts/att/test/*.tif'
#inference_save_dir: /home/mle35/nga-senegal-4class/dataset/predictions/48-0.16/images
#inference_regex: '/adapt/nobackup/people/mwooten3/Senegal_LCLUC/VHR/CAS/M1BS/*.tif'
#inference_regex: '/adapt/nobackup/people/mcarrol2/LCLUC_Senegal/ForKonrad/Tappan24_WV02_20171024_M1BS_103001007374BB00_data.tif'
model_filename: '/adapt/nobackup/people/jacaraba/development/senegal-lcluc-tensorflow/projects/land_cover/models/model_4class-06062022/48-0.16.hdf5'
#inference_regex: '/adapt/nobackup/projects/3sl/data/Tappan/Tappan01_WV02_20110430_M1BS_103001000A27E100_data.tif'
inference_regex: '/adapt/nobackup/projects/3sl/data/VHR/CAS/M1BS/WV02_20210209_M1BS_10300100B3074C00-toa.tif'
inference_save_dir: /adapt/nobackup/projects/ilab/projects/Senegal/3sl/products/land_cover/dev/tcbo.v1/CASTest
