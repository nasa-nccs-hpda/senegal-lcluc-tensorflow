# --------------------------------------------------------------------------
# Configuration of the parameters for training and preprocessing
# very-high resolution dataset using deep learning techniques.
# --------------------------------------------------------------------------

experiment_name: landcover-local-standardization-8bands
experiment_type: otcb

data_dir: '/lscratch/jacaraba/senegal-lcluc/landcover.landcover-local-standardization-8bands'
model_dir: /explore/nobackup/projects/3sl/development/cnn_landcover/standardization/landcover-local-standardization-8bands
seed: 42
gpu_devices: 0,1,2,3
mixed_precision: False
xla: False

input_bands:
  - CoastalBlue
  - Blue
  - Green
  - Yellow
  - Red
  - RedEdge
  - NIR1
  - NIR2

output_bands:
  - CoastalBlue
  - Blue
  - Green
  - Yellow
  - Red
  - RedEdge
  - NIR1
  - NIR2

  
substract_labels: True
normalize: 1.0
rescale: None

modify_labels:
  - "x == 0": 8
  - "x == 1": 9
  - "x == 4": 7
  - "x == 3": 0
  - "x == 2": 0
  - "x == 8": 1
  - "x == 9": 2
  - "x == 7": 3

expand_dims: True
tile_size: 256
include_classes: True
augment: True

# standardization functions: local, global, mixed
# global standardization
# mixed standardization
#metadata_regex: '/explore/nobackup/projects/3sl/development/cnn_landcover/normalization/*.csv'
standardization: 'local'
batch_size: 32
n_classes: 4
test_size: 0.30
learning_rate: 0.0001
max_epochs: 6000
patience: 10

model: "tfc.unet.unet_batchnorm(nclass=4, input_size=(256, 256, 8),maps=[64, 128, 256, 512, 1024])"
loss: 'tf.keras.losses.CategoricalCrossentropy()'
optimizer: tf.keras.optimizers.Adam

metrics:
  - 'tf.keras.metrics.CategoricalAccuracy()'
  - 'tf.keras.metrics.Recall()'
  - 'tf.keras.metrics.Precision()'
  - 'sm.metrics.iou_score'

callbacks:
  - "tf.keras.callbacks.ModelCheckpoint(save_best_only=True, mode='min', monitor='val_loss', filepath='${model_dir}/${experiment_name}{epoch:02d}-{val_loss:.2f}.hdf5')"
  - "tf.keras.callbacks.ReduceLROnPlateau(monitor='val_loss', factor=0.1, patience=4)"
  - "tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=10, restore_best_weights=False)"
  - "tf.keras.callbacks.TerminateOnNaN()"

# window_size: 8192
window_size: 10000
pred_batch_size: 32
inference_overlap: 0.50
inference_treshold: 0.50

# Prediction location
inference_regex_list:
  - '/explore/nobackup/projects/3sl/data/Tappan/*_data.tif'
  - '/explore/nobackup/projects/ilab/projects/Ethiopia/LCLUC_Ethiopia/data/test/WV*.tif'
inference_save_dir: '/explore/nobackup/projects/3sl/development/cnn_landcover/standardization/landcover-local-standardization-8bands'